name: R-CI (BSPM)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up R
      uses: r-lib/actions/setup-r@v2
      with:
        use-public-rspm: false
        r-version: '4.4.3'  # adjust as needed

    - name: Install system dependencies
      run: |
        sudo apt update
        sudo apt install -y libcurl4-openssl-dev libssl-dev libxml2-dev libharfbuzz-dev libfribidi-dev openjdk-11-jdk pandoc

    - name: Configure Java for R
      run: sudo R CMD javareconf


    - name: Configure apt repositories for r2u and CRAN
      run: |
        # Add r2u repository for CRAN as Ubuntu binaries
        echo "deb [arch=amd64] https://r2u.stat.illinois.edu/ubuntu jammy main" | sudo tee /etc/apt/sources.list.d/cranapt.list
        # Add CRAN repository (optional, for up-to-date R binaries)
        echo "deb [arch=amd64] https://cloud.r-project.org/bin/linux/ubuntu jammy-cran40/" | sudo tee /etc/apt/sources.list.d/cran_r.list
        # Import GPG keys for both repositories
        sudo wget -q -O /etc/apt/trusted.gpg.d/cranapt_key.asc https://eddelbuettel.github.io/r2u/assets/dirk_eddelbuettel_key.asc
        sudo wget -q -O /etc/apt/trusted.gpg.d/cran_ubuntu_key.asc https://cloud.r-project.org/bin/linux/ubuntu/marutter_pubkey.asc
        sudo apt-get update

    - name: Install bspm and configure for container use
      run: |
        # Install bspm as a system package (to avoid user library issues)
        sudo Rscript --vanilla -e 'install.packages("bspm", repos="https://cran.r-project.org")'
        # In container environments, set bspm.sudo=TRUE to bypass D-Bus
        echo "options(bspm.sudo = TRUE)" >> ~/.Rprofile
        # Enable bspm (this will now use sudo because of the option above)
        sudo Rscript --vanilla -e 'suppressMessages(bspm::enable())'

    - name: Update apt and install dependencies with retry (system deps for bspm)
      run: |
        # Retry apt-get update up to 5 times with a 10 second delay
        for i in {1..5}; do
          sudo apt-get update && break || sleep 10;
        done
        # Install required packages (including bspm prerequisites)
        sudo apt-get install -y r-base-core python3-dbus python3-gi python3-apt

    - name: Install bspm in R and enable it in site Rprofile # redundant step, keeping the above one is enough
      if: false
      run: |
        Rscript -e "install.packages('bspm', repos='https://cran.r-project.org')"
        RHOME=$(R RHOME)
        sudo bash -c "echo 'suppressMessages(bspm::enable())' >> ${RHOME}/etc/Rprofile.site"
        sudo bash -c "echo 'options(bspm.version.check=FALSE)' >> ${RHOME}/etc/Rprofile.site"

    - name: Basic install R # redundant step, r-lib/actions/setup-r@v2 already installs R
      if: false
      run: |
        sudo apt update
        sudo apt-get install --no-install-recommends software-properties-common dirmngr
        sudo apt install -y r-base r-base-dev

    - name: Install renv and restore # add renv restore step to handle dependencies
      run: |
        Rscript -e 'install.packages("renv", repos="https://cran.r-project.org")'
        Rscript -e 'if (file.exists("renv.lock")) { renv::restore() }' # only restore if renv.lock exists

    - name: Install lintr separately (verbose) # keep it if needed, but consider if remotes::install_deps should handle it
      if: false
      run: |
        R -e 'bspm::disable(); install.packages("lintr", verbose = TRUE)'
      working-directory: ${{ github.workspace }}

    - name: Install remotes separately # keep it if needed, but remotes should be already installed by setup-r or renv
      if: false
      run: |
        R -e 'bspm::disable(); install.packages("remotes", verbose = TRUE)'
      working-directory: ${{ github.workspace }}

    - name: Install additional R packages # keep it if needed, but consider if remotes::install_deps or renv should handle it
      if: false
      run: |
        Rscript --vanilla -e 'install.packages(c("styler", "testthat", "optparse", "rprojroot", "pkgdown"), repos="https://cran.r-project.org")'
        Rscript --vanilla -e 'install.packages(c("DT"), repos="https://cran.r-project.org")'

    - name: Install dependencies using remotes # This should install all dependencies from DESCRIPTION
      run: |
        set -e
        R -e 'bspm::disable(); remotes::install_deps(dependencies = TRUE, Ncpus = parallel::detectCores())'
      working-directory: ${{ github.workspace }}
      shell: bash

    - name: Run R CMD check
      run: R CMD check .

    - name: Cache R packages # keep cache step, it is useful
      uses: actions/cache@v3
      with:
        path: |
          ${{ env.R_LIBS_USER }}
          !${{ env.R_LIBS_USER }}/testing
        key: ${{ runner.os }}-r-${{ matrix.config.r }}-${{ hashFiles('**/DESCRIPTION', 'renv.lock')} } # include renv.lock in cache key
        restore-keys: |
          ${{ runner.os }}-r-${{ matrix.config.r }}-
          ${{ runner.os }}-r-

    - name: Fix .lintr Encoding (if needed) # keep lintr step, if needed
      if: false
      run: |
        echo "Ensuring .lintr is UTF-8 encoded"
        iconv -f $(file -b --mime-encoding .lintr) -t UTF-8 .lintr > .lintr.tmp
        mv .lintr.tmp .lintr
      shell: bash

    - name: Debug - Print Project Root # keep debug step if needed
      if: false
      run: |
        R -e 'library(rprojroot); print(find_root(has_file(".Rprofile")))'
      working-directory: ${{ github.workspace }}

    - name: Lint code # keep lint code step
      run: |
        set -e
        R -e 'lintr::lint_package()'
      shell: bash

    - name: Run tests # keep run tests step
      run: |
        set -e
        R -e 'testthat::test_dir("tests/testthat", reporter = "progress")'
      shell: bash

    - name: Style code # keep style code step
      if: false
      run: |
        set -e
        R -e 'styler::style_pkg()'
      shell: bash

    - name: Build package documentation # keep build doc step
      if: false
      run: |
        set -e
        R -e 'pkgdown::build_site()'
      shell: bash